{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Metadata": {},
  "Parameters": {},
  "Mappings": {},
  "Conditions": {},
  "Resources": {
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG for load balancer nodes",
        "SecurityGroupIngress": [],
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerSecurityGroup"
          }
        ]
      }
    },
    "BastionSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "-",
        "SecurityGroupIngress": [],
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionSecurityGroup"
          }
        ]
      }
    },
    "ServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG for server instances",
        "SecurityGroupIngress": [],
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ServerSecurityGroup"
          }
        ]
      }
    },
    "DataBaseSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG for rds/cache/dynamo/aurora instances",
        "SecurityGroupIngress": [],
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DataBaseSecurityGroup"
          }
        ]
      }
    },
    "BastionOutboundRule1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "BastionSecurityGroup"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "BastionInboundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "BastionSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "BastionInboundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "BastionSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": {
          "Ref": "DataBaseSecurityGroup"
        }
      }
    },

    "BastionInboundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "BastionSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "6379",
        "ToPort": "6379",
        "SourceSecurityGroupId": {
          "Ref": "DataBaseSecurityGroup"
        }
      }
    },
    "ServerInboundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "ServerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "BastionSecurityGroup"
        }
      }
    },
    "ServerInboundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "ServerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": {
          "Ref": "DataBaseSecurityGroup"
        }
      }
    },
    "ServerInboundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "ServerSecurityGroup"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "LoadBalancerSecurityGroup"
        }
      }
    },
    "ServerInboundRule5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "ServerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "6379",
        "ToPort": "6379",
        "SourceSecurityGroupId": {
          "Ref": "DataBaseSecurityGroup"
        }
      }
    },
    "ServerOutboundRule1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "ServerSecurityGroup"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "DatabaseInboundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "DataBaseSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "BastionSecurityGroup"
        }
      }
    },
    "DatabaseInboundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "DataBaseSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": {
          "Ref": "ServerSecurityGroup"
        }
      }
    },
    "DatabaseInboundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "DataBaseSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": {
          "Ref": "BastionSecurityGroup"
        }
      }
    },
    "DatabaseInboundRule4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "DataBaseSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "6379",
        "ToPort": "6379",
        "SourceSecurityGroupId": {
          "Ref": "ServerSecurityGroup"
        }
      }
    },
    "DatabaseInboundRule5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "DataBaseSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "6379",
        "ToPort": "6379",
        "SourceSecurityGroupId": {
          "Ref": "BastionSecurityGroup"
        }
      }
    },
    "DatabaseOutboundRule1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "DataBaseSecurityGroup"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "LBOutboundRule1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "LoadBalancerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "LBInboundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "LoadBalancerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "LBInboundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "LoadBalancerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "LBInboundRule3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "LoadBalancerSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "ServerSecurityGroup"
        }
      }
    },
    "NACLPublicA1": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NACLPublicA1"
          }
        ]
      }
    },
    "NACLPublicA1SubnetAsoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "SubnetId": {
          "Fn::ImportValue": "SbntpublicA1"
        }
      }
    },

    "NACLPublicA1SubnetAsoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "SubnetId": {
          "Fn::ImportValue": "SbntpublicA2"
        }
      }
    },
    "NACLPublicA1SubnetAsoc3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "SubnetId": {
          "Fn::ImportValue": "SbntpublicB1"
        }
      }
    },

    "NACLPublicA1SubnetAsoc4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "SubnetId": {
          "Fn::ImportValue": "SbntpublicB2"
        }
      }
    },

    "NACLPublicA1Inbound10": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": 22,
          "To": 22
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 10
      }
    },
    "NACLPublicA1Inbound20": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": 80,
          "To": 80
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 20
      }
    },
    "NACLPublicA1Inbound30": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "10.0.0.0/0",
        "PortRange": {
          "From": 443,
          "To": 443
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 30
      }
    },
    "NACLPublicA1Inbound40": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": 32768,
          "To": 65535
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 40
      }
    },
    "NACLPublicA1Inbound50": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "10.0.6.0/23",
        "PortRange": {
          "From": 5432,
          "To": 5432
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 50
      }
    },
    "NACLPublicA1Inbound60": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "10.0.6.0/23",
        "PortRange": {
          "From": 6379,
          "To": 6379
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 60
      }
    },
    "NACLPublicA1Inbound70": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "10.0.2.0/23",

        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 70
      }
    },
    "NACLPublicA1Inbound80": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "10.0.0.0/23",

        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 80
      }
    },

    "NACLPublicA1Outbound100": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPublicA1" },
        "CidrBlock": "0.0.0.0/0",
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
        "Egress": true
      }
    },
    "NACLPrivateA1": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NACLPrivateA1"
          }
        ]
      }
    },
    "NACLPrivateA1SubnetAsoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "SubnetId": {
          "Fn::ImportValue": "SbntprivateA1"
        }
      }
    },
    "NACLPrivateA1SubnetAsoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "SubnetId": {
          "Fn::ImportValue": "SbntprivateB1"
        }
      }
    },

    "NACLPrivateA1Inbound10": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "CidrBlock": "10.0.0.0/23",
        "PortRange": {
          "From": 80,
          "To": 80
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 10
      }
    },
    "NACLPrivateA1Inbound20": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "CidrBlock": "10.0.2.0/23",
        "PortRange": {
          "From": 22,
          "To": 22
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 20
      }
    },
    "NACLPrivateA1Inbound30": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "CidrBlock": "10.0.6.0/23",
        "PortRange": {
          "From": 5432,
          "To": 5432
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 30
      }
    },
    "NACLPrivateA1Inbound40": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "CidrBlock": "10.0.6.0/23",
        "PortRange": {
          "From": 6379,
          "To": 6379
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 40
      }
    },
    "NACLPrivateA1Inbound50": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "CidrBlock": "10.0.4.0/23",

        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 50
      }
    },
    "NACLPrivateA1Outbound100": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA1" },
        "CidrBlock": "0.0.0.0/0",
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
        "Egress": true
      }
    },
    "NACLPrivateA2": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NACLPrivateA2"
          }
        ]
      }
    },
    "NACLPrivateA2SubnetAsoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "SubnetId": {
          "Fn::ImportValue": "SbntprivateA2"
        }
      }
    },
    "NACLPrivateA2SubnetAsoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "SubnetId": {
          "Fn::ImportValue": "SbntprivateB2"
        }
      }
    },
    "NACLPrivateA2Inbound10": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "CidrBlock": "10.0.0.0/21",
        "PortRange": {
          "From": 5432,
          "To": 5432
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 10
      }
    },
    "NACLPrivateA2Inbound20": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "CidrBlock": "10.0.0.0/21",
        "PortRange": {
          "From": 6379,
          "To": 6379
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 20
      }
    },
    "NACLPrivateA2Inbound30": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "CidrBlock": "10.0.2.0/23",
        "PortRange": {
          "From": 22,
          "To": 22
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 30
      }
    },
    "NACLPrivateA2Inbound40": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "CidrBlock": "10.0.6.0/23",

        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 40
      }
    },
    "NACLPrivateA2Outbound100": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA2" },
        "CidrBlock": "0.0.0.0/0",
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
        "Egress": true
      }
    },
    "NACLPrivateA3": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Fn::ImportValue": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NACLPrivateA3"
          }
        ]
      }
    },
    "NACLPrivateA3SubnetAsoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA3" },
        "SubnetId": {
          "Fn::ImportValue": "SbntprivateA3"
        }
      }
    },
    "NACLPrivateA3SubnetAsoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA3" },
        "SubnetId": {
          "Fn::ImportValue": "SbntprivateB3"
        }
      }
    },
    "NACLPrivateA3Inbound10": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA3" },
        "CidrBlock": "10.0.2.0/23",
        "PortRange": {
          "From": 22,
          "To": 22
        },
        "Protocol": 6,
        "RuleAction": "allow",
        "RuleNumber": 10
      }
    },
    "NACLPrivateA3Inbound20": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA3" },
        "CidrBlock": "10.0.8.0/23",

        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 20
      }
    },
    "NACLPrivateA3Outbound100": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NACLPrivateA3" },
        "CidrBlock": "0.0.0.0/0",
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
        "Egress": true
      }
    }
  },
  "Outputs": {
    "DataBaseSecurityGroup": {
      "Value": {
        "Ref": "DataBaseSecurityGroup"
      },
      "Export": {
        "Name": "DataBaseSG"
      }
    },
    "ServerSecurityGroup": {
      "Value": {
        "Ref": "ServerSecurityGroup"
      },
      "Export": {
        "Name": "ServerSG"
      }
    },
    "BastionSecurityGroup": {
      "Value": {
        "Ref": "BastionSecurityGroup"
      },
      "Export": {
        "Name": "BastionSG"
      }
    },
    "LoadBalancerSecurityGroup": {
      "Value": {
        "Ref": "LoadBalancerSecurityGroup"
      },
      "Export": {
        "Name": "LoadBalancerSG"
      }
    }
  }
}
