{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "EC2 config"
          },
          "Parameters": ["BastionAMIId", "BastionPemKeyId"]
        }
      ]
    }
  },
  "Parameters": {
    "BastionAMIId": {
      "Description": "ami",
      "Type": "String",
      "Default": "ami-0947d2ba12ee1ff75"
    },
    "BastionPemKeyId": {
      "Description": "the id for ssh the bastions",
      "Type": "String",
      "Default": "bastionkp"
    }
  },
  "Mappings": {},
  "Conditions": {},
  "Resources": {
    "BastionEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionEIP"
          }
        ]
      }
    },
    "BastionASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "BastionlaunchTemplate"
          },
          "Version": 1
        },
        "MaxSize": "1",
        "MinSize": "1",
        "HealthCheckGracePeriod": 30,
        "HealthCheckType": "EC2",
        "VPCZoneIdentifier": [
          {
            "Fn::ImportValue": "SbntpublicA2"
          },
          {
            "Fn::ImportValue": "SbntpublicB2"
          }
        ]
      }
    },
    "BastioniamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": ["BastionRole"]
      }
    },
    "BastionlaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateName": "BastionDevTemplate",
        "LaunchTemplateData": {
          "ImageId": {
            "Ref": "BastionAMIId"
          },
          "InstanceInitiatedShutdownBehavior": "terminate",
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": ["BastioniamInstanceProfile", "Arn"]
            }
          },
          "InstanceType": "t3.micro",
          "KeyName": {
            "Ref": "BastionPemKeyId"
          },
          "NetworkInterfaces": [],
          "SecurityGroupIds": [
            {
              "Fn::ImportValue": "BastionSG"
            }
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "\n",
                [
                  "#!/bin/bash",
                  "echo preparing eip conector",
                  "export AWS_DEFAULT_REGION=us-east-1",
                  "INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                  {
                    "Fn::Sub": [
                      "aws ec2 associate-address --instance-id $INSTANCE_ID --allocation-id=${EIP} --allow-reassociation",
                      {
                        "EIP": {
                          "Fn::GetAtt": ["BastionEIP", "AllocationId"]
                        }
                      }
                    ]
                  },
                  "echo eip conector sucesss",
                  "sudo yum -y update",
                  "echo preparing redis....",
                  "sudo wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm",
                  "sudo rpm -ivh epel-release-latest-6.noarch.rpm",
                  "sudo yum clean all",
                  "sudo yum repolist",
                  "sudo yum -y install redis",
                  "sudo service redis start",
                  "echo preparing postgresql",
                  "sudo yum -y install postgresql-server postgresql-contrib",
                  "sudo postgresql-setup initdb",
                  "sudo systemctl start postgresql",
                  "sudo yum -y install jq",
                  "pguser=$(aws secretsmanager get-secret-value --secret-id RDSUser | jq -r '.SecretString')",
                  "pgpass=$(aws secretsmanager get-secret-value --secret-id RDSPass | jq -r '.SecretString')",
                  {
                    "Fn::Sub": [
                      "psql postgres://$pguser:$pgpass@${RDSHOST}:5432 -c 'CREATE DATABASE \"Client_Template\"; CREATE DATABASE \"Client_Template\"; '",
                      {
                        "RDSHOST": {
                          "Fn::ImportValue": "RDSendpoint"
                        }
                      }
                    ]
                  },
                  "sudo yum -y install git"
                ]
              ]
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "EIP": {
      "Value": {
        "Ref": "BastionEIP"
      }
    },
    "ASG": {
      "Value": {
        "Ref": "BastionASG"
      }
    },
    "Template": {
      "Value": {
        "Ref": "BastionlaunchTemplate"
      }
    }
  }
}
